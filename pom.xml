<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.raffaeleragni.apilab</groupId>
  <artifactId>apilab</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>12</maven.compiler.source>
    <maven.compiler.target>12</maven.compiler.target>

    <version.logback>6.2</version.logback>
    <version.immutables>2.8.1</version.immutables>
    <version.dagger>2.24</version.dagger>
    <version.javalin>3.6.0</version.javalin>
    <version.jwt>3.10.1</version.jwt>
    <version.jetty>9.4.20.v20190813</version.jetty>
    <version.alpn-api>1.1.3.v20160715</version.alpn-api>
    <version.alpn-boot>8.1.13.v20181017</version.alpn-boot>
    <version.rabbitmq>5.8.0</version.rabbitmq>
    <version.lettuce>5.2.2.RELEASE</version.lettuce>
    <version.jackson>2.10.3</version.jackson>
    <version.prometheusclient>0.8.1</version.prometheusclient>
    <version.retrofit>2.6.2</version.retrofit>
    <version.swagger-core>2.1.1</version.swagger-core>
    <version.swagger-ui>3.23.8</version.swagger-ui>
    <version.hikaricp>2.3.2</version.hikaricp>
    <version.jdbi>3.12.0</version.jdbi>
    <version.liquibase>3.8.0</version.liquibase>
    <version.postgresclient>42.2.5</version.postgresclient>

    <version.junit>5.6.0</version.junit>
    <version.mockito>3.2.4</version.mockito>
    <version.hamcrest>2.1</version.hamcrest>
    <version.jsonassert>1.5.0</version.jsonassert>
    <version.jacoco>0.8.5</version.jacoco>


    <!-- Sonar-JaCoCo properties -->
    <sonar.language>java</sonar.language>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>

  </properties>
  <dependencies>

    <!-- M A I N   D E P E N D E N C I E S -->

    <!-- logging -->
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${version.logback}</version>
    </dependency>
    <!-- immutable values -->
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value-annotations</artifactId>
      <version>${version.immutables}</version>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>${version.immutables}</version>
      <optional>true</optional>
    </dependency>
    <!-- dagger2 dependency injection at compile time -->
    <dependency>
      <groupId>com.google.dagger</groupId>
      <artifactId>dagger</artifactId>
      <version>${version.dagger}</version>
    </dependency>
    <dependency>
      <groupId>com.google.dagger</groupId>
      <artifactId>dagger-compiler</artifactId>
      <version>${version.dagger}</version>
      <optional>true</optional>
    </dependency>
    <!-- http and javalin -->
    <dependency>
      <groupId>io.javalin</groupId>
      <artifactId>javalin</artifactId>
      <version>${version.javalin}</version>
    </dependency>
    <!-- auth required -->
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
      <version>${version.jwt}</version>
    </dependency>
    <!-- these are required to handle http/2 -->
    <dependency>
      <groupId>org.eclipse.jetty.http2</groupId>
      <artifactId>http2-server</artifactId>
      <version>${version.jetty}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-conscrypt-server</artifactId>
      <version>${version.jetty}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.alpn</groupId>
      <artifactId>alpn-api</artifactId>
      <version>${version.alpn-api}</version>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty.alpn</groupId>
      <artifactId>alpn-boot</artifactId>
      <version>${version.alpn-boot}</version>
    </dependency>
    <!-- Queue handling and consumers -->
    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>amqp-client</artifactId>
      <version>${version.rabbitmq}</version>
    </dependency>
    <!-- Redis -->
    <dependency>
      <groupId>io.lettuce</groupId>
      <artifactId>lettuce-core</artifactId>
      <version>${version.lettuce}</version>
    </dependency>
    <!-- Jackson support for modern types -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-parameter-names</artifactId>
      <version>${version.jackson}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>${version.jackson}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${version.jackson}</version>
    </dependency>
    <!-- prometheus metrics -->
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient</artifactId>
      <version>${version.prometheusclient}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_servlet</artifactId>
      <version>${version.prometheusclient}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_hotspot</artifactId>
      <version>${version.prometheusclient}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_httpserver</artifactId>
      <version>${version.prometheusclient}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_jetty</artifactId>
      <version>${version.prometheusclient}</version>
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-servlet</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- retrofit client for calling other apis -->
    <dependency>
      <groupId>com.squareup.retrofit2</groupId>
      <artifactId>retrofit</artifactId>
      <version>${version.retrofit}</version>
    </dependency>
    <!-- swagger support -->
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-core</artifactId>
      <version>${version.swagger-core}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>swagger-ui</artifactId>
      <version>${version.swagger-ui}</version>
    </dependency>
    <!-- Database and pooler, and migration tool -->
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${version.hikaricp}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>swagger-ui</artifactId>
      <version>${version.swagger-ui}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>swagger-ui</artifactId>
      <version>${version.swagger-ui}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>swagger-ui</artifactId>
      <version>${version.swagger-ui}</version>
    </dependency>
    <dependency>
      <groupId>org.jdbi</groupId>
      <artifactId>jdbi3-core</artifactId>
      <version>${version.jdbi}</version>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>${version.liquibase}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${version.postgresclient}</version>
    </dependency>

    <!-- T E S T   D E P E N D E N C I E S -->

    <!-- junit -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>
    <!-- testing mockers, matchers and utilities -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${version.mockito}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${version.hamcrest}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <version>${version.jsonassert}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- code coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.jacoco}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- attached to Maven test phase -->
          <execution>
            <id>report-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <environmentVariables>
            <API_ENABLE_ENDPOINTS>true</API_ENABLE_ENDPOINTS>
            <API_ENABLE_CONSUMERS>true</API_ENABLE_CONSUMERS>
            <API_ENABLE_SCHEDULED>true</API_ENABLE_SCHEDULED>
            <API_ENABLE_MIGRATION>true</API_ENABLE_MIGRATION>
            <API_QUIT_AFTER_MIGRATION>>false</API_QUIT_AFTER_MIGRATION>
            <API_JWT_SECRET>test</API_JWT_SECRET>
            <API_REDIS_URL>redis://localhost</API_REDIS_URL>
            <API_DATABASE_URL>jdbc:postgresql://localhost/postgres</API_DATABASE_URL>
            <API_DATABASE_USERNAME>postgres</API_DATABASE_USERNAME>
            <API_DATABASE_PASSWORD>postgres</API_DATABASE_PASSWORD>
            <API_DATABASE_MAXPOOLSZE>5</API_DATABASE_MAXPOOLSZE>
            <API_RABBITMQ_USERNAME>guest</API_RABBITMQ_USERNAME>
            <API_RABBITMQ_PASSWORD>guest</API_RABBITMQ_PASSWORD>
            <API_RABBITMQ_HOST>localhost</API_RABBITMQ_HOST>
            <API_RABBITMQ_PORT>5672</API_RABBITMQ_PORT>
            <JAVALIN_HTTP2_PORT>17367</JAVALIN_HTTP2_PORT>
            <JAVALIN_HTTPS2_PORT>19272</JAVALIN_HTTPS2_PORT>
            <JAVALIN_PROMETHEUS_PORT>18392</JAVALIN_PROMETHEUS_PORT>
          </environmentVariables>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*IT.java</include>
          </includes>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <!-- This is necessary for gpg to not try to use the pinentry programs -->
          <gpgArguments>
            <arg>--no-tty</arg>
            <arg>--batch</arg>
            <arg>--yes</arg>
            <arg>--pinentry-mode</arg>
            <arg>loopback</arg>
          </gpgArguments>
          <sourcepath>${project.basedir}/src/main/java;${project.basedir}/target/generated-sources/annotations</sourcepath>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      
    </plugins>
  </build>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses><developers>
    <developer>
      <name>Raffaele Ragni</name>
      <email>raffaele.ragni@gmail.com</email>
      <organizationUrl>https://github.com/raffaeleragni</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>https://github.com/raffaeleragni/tinder.git</connection>
    <url>https://github.com/raffaeleragni/tinder</url>
  </scm>

  <distributionManagement>
    <site>
      <id>tinder.wiki</id>
      <url>https://github.com/raffaeleragni/wiki</url>
    </site>
    <repository>
      <id>github</id>
      <name>GitHub OWNER Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/raffaeleragni/apilab</url>
    </repository>
  </distributionManagement>

</project>
